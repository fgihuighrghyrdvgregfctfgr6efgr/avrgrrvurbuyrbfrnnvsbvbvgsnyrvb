local char = game:GetService("Players").LocalPlayer.Character

local hat1 = char:WaitForChild("InternationalFedora")

hat1.Name = "Hatz"
wait(.1)

local hat2 = char:WaitForChild("InternationalFedora")

hat2.Name = "Hat2"
wait(.1)

local hat3 = char:WaitForChild("InternationalFedora")

hat3.Name = "Hat3"
wait(.1)

local hat4 = char:WaitForChild("Kate Hair")

wait(.1)

local hat5 = char:WaitForChild("International Fedora")

wait(.1)

hat1.Handle.SpecialMesh:Remove()
hat2.Handle.SpecialMesh:Remove()
hat3.Handle.SpecialMesh:Remove()
hat4.Handle.Mesh:Remove()
hat5.Handle.SpecialMesh:Remove()
game.Players.LocalPlayer.Character['Pal Hair'].Handle.Mesh:Remove()





HumanDied = false
local reanim
function noplsmesh(hat)
_G.OldCF=workspace.Camera.CFrame
oldchar=game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character=workspace[game.Players.LocalPlayer.Name]
for i,v in next, workspace[game.Players.LocalPlayer.Name][hat]:GetDescendants() do
if v:IsA('Mesh') or v:IsA('SpecialMesh') then
v:Remove()
end
end
game.Players.LocalPlayer.Character=oldchar
wait()
workspace.Camera.CFrame=_G.OldCF
game.Players.LocalPlayer.Character=oldchar
end
local plr = game.Players.LocalPlayer
local char = game.Players.LocalPlayer.Character
local srv = game:GetService('RunService')
local ct = {}
local te = table.insert

HumanDied=false

for i,v in next, char:GetDescendants() do 
if v:IsA('BasePart') then
te(ct,srv.Heartbeat:Connect(function()
v.Velocity = Vector3.new(0,-30.5,0)
sethiddenproperty(game.Players.LocalPlayer,"MaximumSimulationRadius",math.huge)
sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius",math.huge)
end))
end
end

    
_G.Animated = true
_G.Netless = Vector3.new(0,-30.5,0)
_G.Fling = Vector3.new(9e9,9e9,9e9)





wait(.1)
local function Align(P0,P1,Position,Rotate)
local AlignPosition = Instance.new("AlignPosition", P0)
local AlignOrientation = Instance.new("AlignOrientation", P0)
local Attachment1 = Instance.new("Attachment", P0)
local Attachment2 = Instance.new("Attachment", P1)
-- Main Attach Thingy:
AlignPosition.Attachment0,AlignPosition.Attachment1 = Attachment1,Attachment2 -- Shortcut
AlignOrientation.Attachment0,AlignOrientation.Attachment1 = Attachment1,Attachment2 -- Shortcut
-- Properties:
AlignPosition.RigidityEnabled = true
AlignOrientation.RigidityEnabled = true
-- Rotate/Position
Attachment1.Position = Position or Vector3.new(0,0,0)
Attachment1.Rotation = Rotate or Vector3.new(0,0,0)
end

-- Main (R6)
local char = workspace[game.Players.LocalPlayer.Name]
local Character = workspace[game.Players.LocalPlayer.Name]

char.Humanoid.HipHeight=1
wait(.001)
char.Humanoid.HipHeight=2
wait(.001)
char.Humanoid.HipHeight=3
wait(.001)
char.Humanoid.HipHeight=4
wait(.01)
char.Animate.idle.Animation1.AnimationId = "0"
char.Animate.idle.Animation2.AnimationId = "0"
char.Humanoid.HipHeight=5
wait(.001)
char.Animate.Disabled = true
wait(.001)
char.Humanoid.HipHeight=0
wait(.001)
char.Humanoid.HipHeight=0
wait(.2)

local Humanoid = Character.Humanoid
Humanoid:ChangeState("Physics")
local Hat = Character:WaitForChild("Kate Hair").Handle


Character.Archivable = true
Humanoid:ChangeState("Physics")
local Reanim = Character:Clone()
Reanim.Parent = Character
Reanim.Name = "OofHub"

for i,v in pairs(Reanim:GetChildren()) do 
	if v:IsA("BasePart") then v.Transparency = 1
--		elseif v:IsA("Accessory") then v:Destroy()
	end
end


--Noclip
game:GetService("RunService").Stepped:Connect(function()
    Humanoid.Died:Connect(function()
        return 
    end)
    for i,v in pairs(Character:GetChildren()) do
        if v:IsA("BasePart") then
            v.CanCollide = false
        end
    end
end)
--Aligning


Character["Right Arm"].Transparency = 0


Character.Torso['Right Shoulder']:Destroy()
Character.Torso['Left Shoulder']:Destroy()
Character.Torso['Right Hip']:Destroy()
Character.Torso['Left Hip']:Destroy()
Character.HumanoidRootPart:Destroy()
function InstantAttach(P0)
    Align(Character[P0],Reanim[P0])
end
InstantAttach("Right Arm")
InstantAttach("Left Arm")
InstantAttach("Right Leg")
InstantAttach("Left Leg")
InstantAttach("Torso")
hat1.Handle.AccessoryWeld:Remove()
hat2.Handle.AccessoryWeld:Remove()
hat3.Handle.AccessoryWeld:Remove()
hat4.Handle.AccessoryWeld:Remove()
hat5.Handle.AccessoryWeld:Remove()
Character['Backuette'].Handle.AccessoryWeld:Remove()
game.Players.LocalPlayer.Character['Pal Hair'].Handle.AccessoryWeld:Remove()
Align(Character['Kate Hair'].Handle,Reanim['Left Leg'])
Hat.Attachment.Rotation = Vector3.new(90,0,0)
Align(Character['Hatz'].Handle,Reanim['Hatz'].Handle)
Align(Character['Hat2'].Handle,Reanim['Hat2'].Handle)
Align(Character['Hat3'].Handle,Reanim['Hat3'].Handle)
Align(Character['International Fedora'].Handle,Reanim['International Fedora'].Handle)
Align(Character['Backuette'].Handle,Reanim['Backuette'].Handle)
Align(Character['Pal Hair'].Handle,Reanim['Pal Hair'].Handle)

Character['Pal Hair'].Handle.Velocity = _G.Netless
Reanim['Left Arm'].Velocity = _G.Netless
Reanim['Right Leg'].Velocity = _G.Netless
Reanim['Right Arm'].Velocity = _G.Netless
Reanim['Head'].Velocity = _G.Netless
Reanim.Torso.Velocity = _G.Netless
Character["Left Leg"].Name = "Bullet"
function Pos(part, parent, p)
Instance.new("Attachment",part)
Instance.new("AlignPosition",part)
Instance.new("Attachment",parent)
part.Attachment.Name = part.Name
parent.Attachment.Name = part.Name
part.AlignPosition.Attachment0 = part[part.Name]
part.AlignPosition.Attachment1 = parent[part.Name]
parent[part.Name].Position = p or Vector3.new()
part.AlignPosition.MaxForce = 999999999*10
part.AlignPosition.MaxVelocity = math.huge
part.AlignPosition.ReactionForceEnabled = false
part.AlignPosition.Responsiveness = math.huge
part.AlignPosition.RigidityEnabled = false
end

Pos(Character['Bullet'],Reanim.Backuette.Handle)


function flinger(p)
f=Instance.new('BodyAngularVelocity',p)
f.AngularVelocity = Vector3.new(9e9*10,9e9*10,9e9*10)
f.MaxTorque=Vector3.new(9e9*10,9e9*10,9e9*10)
end

function fix(p)
fixer=Instance.new('BodyPosition',p)
fixer.Name='BP'
fixer.P=9e9
fixer.D=9e9
fixer.MaxForce=Vector3.new(99999,99999,99999)
end

flinger(Character['Bullet'])



m=plr:GetMouse()

local click

--[[te(ct,srv.Heartbeat:Connect(function()
if click == true then
Character.Bullet.Position=m.Hit.p
elseif click == false then
Character.Bullet.Position=Character.Torso.Position
end
end))

te(ct,m.Button1Down:Connect(function()
click=true
end))

te(ct,m.Button1Up:Connect(function()
click=false
end))]]--

--Death Trigger
game.Players.LocalPlayer.Character = Reanim
game.Players.LocalPlayer.Character.Humanoid.Died:Connect(function()
Character.Humanoid:ChangeState(15)
game.Players.LocalPlayer.Character = workspace[game.Players.LocalPlayer.Name]
_G.Animated = false
Reanim:Destroy()
end)
workspace:FindFirstChildOfClass("Camera").CameraSubject = Reanim.Humanoid

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

function hatset(yes,part,c1,c0,nm)
reanim[yes].Handle.AccessoryWeld.Part1=reanim[part]
reanim[yes].Handle.AccessoryWeld.C1=c1 or CFrame.new()
reanim[yes].Handle.AccessoryWeld.C0=c0 or CFrame.new()--3bbb322dad5929d0d4f25adcebf30aa5
if nm==true then
noplsmesh(yes)
end
end

--put the hat script converted below

reanim = game.Players.LocalPlayer.Character
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(-0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))

Mode='1'

mousechanger=game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
if k == 'urkeybind' then-- first mode
Mode='1'
elseif k == 'urkeybind' then-- second mode
Mode='2'
elseif k == 'urkeybind' then-- third mode
Mode='3'
end
end)

local plr = game.Players.LocalPlayer
plr:GetMouse().Button1Down:Connect(function()
    Mode='2'
end)
plr:GetMouse().Button1Up:Connect(function()
    Mode='1'
end)

coroutine.wrap(function()
while true do -- anim changer
hatset('International Fedora','Right Leg',CFrame.new(),reanim['International Fedora'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),false)
hatset('Pal Hair','Torso',CFrame.new(),reanim['Pal Hair'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),false)
hatset('Hatz','Left Leg',CFrame.new(),reanim['Hatz'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),false)
hatset('Hat2','Right Arm',CFrame.new(),reanim['Hat2'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(11+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),false)
hatset('Hat3','Left Arm',CFrame.new(),reanim['Hat3'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),-1.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(11+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),false)
if HumanDied then mousechanger:Disconnect() break end
sine = sine + speed
local rlegray = Ray.new(reanim["Right Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local rlegpart, rlegendPoint = workspace:FindPartOnRay(rlegray, char)
local llegray = Ray.new(reanim["Left Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local llegpart, llegendPoint = workspace:FindPartOnRay(llegray, char)
local rightvector = (Root.Velocity * Root.CFrame.rightVector).X + (Root.Velocity * Root.CFrame.rightVector).Z
local lookvector = (Root.Velocity * Root.CFrame.lookVector).X + (Root.Velocity * Root.CFrame.lookVector).Z
if lookvector > reanim.Humanoid.WalkSpeed then
lookvector = reanim.Humanoid.WalkSpeed
end
if lookvector < -reanim.Humanoid.WalkSpeed then
lookvector = -reanim.Humanoid.WalkSpeed
end
if rightvector > reanim.Humanoid.WalkSpeed then
rightvector = reanim.Humanoid.WalkSpeed
end
if rightvector < -reanim.Humanoid.WalkSpeed then
rightvector = -reanim.Humanoid.WalkSpeed
end
local lookvel = lookvector / reanim.Humanoid.WalkSpeed
local rightvel = rightvector / reanim.Humanoid.WalkSpeed
if Mode == '1' then
hatset('Backuette','Right Arm',CFrame.new(),reanim['Backuette'].Handle.AccessoryWeld.C0:Lerp(CF(2+0*math.cos(sine/13),-0.6+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(180+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),false)
if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),01+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),2+0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.64+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),-0.1+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(-32+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.6+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(11+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),01+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),2+0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.64+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),-0.1+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(-32+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.6+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(11+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),01+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),2+0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.64+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),-0.1+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(-32+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.6+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(11+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 20 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),01+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),2+0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-7+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.64+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),-0.1+0*math.cos(sine/13))*ANGLES(RAD(0+-33*math.cos(sine/13)),RAD(-9+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.6+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+33*math.cos(sine/13)),RAD(8+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
--run clerp here
end
elseif Mode == '2' then
hatset('Backuette','Right Arm',CFrame.new(),reanim['Backuette'].Handle.AccessoryWeld.C0:Lerp(CF(2+0*math.cos(sine/13),-0.6+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(180+0*math.cos(sine/13)),RAD(13+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),false)
if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),01+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),2+0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.64+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),-0.1+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(-32+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.6+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(11+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),01+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),2+0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.64+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),-0.1+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(-32+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.6+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(11+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),01+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),2+0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.64+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),-0.1+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(-32+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.6+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+3*math.cos(sine/13)),RAD(11+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 20 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),01+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),2+0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-7+-3*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),-0.5+0.05*math.cos(sine/13),-0.5+0*math.cos(sine/13))*ANGLES(RAD(64+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.64+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),-0.1+0*math.cos(sine/13))*ANGLES(RAD(0+-33*math.cos(sine/13)),RAD(-9+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.6+0*math.cos(sine/13),-2+-0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+33*math.cos(sine/13)),RAD(8+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
--run clerp here
end
elseif Mode == '3' then
if Root.Velocity.y > 1 then -- jump
--jump clerp here
elseif Root.Velocity.y < -1 then -- fall
--fall clerp here
elseif Root.Velocity.Magnitude < 2 then -- idle
--idle clerp here
elseif Root.Velocity.Magnitude < 20 then -- walk
--walk clerp here
elseif Root.Velocity.Magnitude > 20 then -- run
--run clerp here
end
end
srv.RenderStepped:Wait()
end
end)()
--Created using Nexo Animator
for i,v in pairs(Reanim:GetChildren()) do 
	if v:IsA("BasePart") then v.Transparency = 1
	end
end
for i,v in pairs(Character:GetChildren()) do 
	if v:IsA("Accessory") then v.Handle.Transparency = 1
	end
end
Hat.Transparency = 0    
