local Plr = game:GetService("Players").LocalPlayer -- you
local Player = game:GetService("Players").LocalPlayer-- you
local Character = Player.Character-- your character
local rightArm = Character:WaitForChild("Right Arm")

local Hats = {
    arm1 = Character:WaitForChild("Hat1") -- the hat/body limb name -- the hat/body limb name -- the hat/body limb name
} -- the hat/body limb name

Hats.arm1.Handle.Mesh:Remove()
rightArm.Size = Vector3.new(0,0,0)
wait(.1)

HumanDied = false
local reanim
function noplsmesh(hat)
_G.OldCF=workspace.Camera.CFrame
oldchar=game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character=workspace[game.Players.LocalPlayer.Name]
for i,v in next, workspace[game.Players.LocalPlayer.Name][hat]:GetDescendants() do
if v:IsA('Mesh') or v:IsA('SpecialMesh') then
v:Remove()
end
end
game.Players.LocalPlayer.Character=oldchar
wait()
workspace.Camera.CFrame=_G.OldCF
game.Players.LocalPlayer.Character=oldchar
end
_G.ClickFling=false -- Set this to true if u want.
loadstring(game:HttpGet(('https://raw.githubusercontent.com/XeneonPlays/Nexo/main/NexoPD'),true))()

--[[local userInput = game:GetService("UserInputService")

local players = game:GetService("Players")



local sprintSpeed = 22

local walkSpeed = 11



local player = players.LocalPlayer



local function beginSprint(input, gameProcessed)

    if not gameProcessed then        

        if input.UserInputType == Enum.UserInputType.Keyboard then

            local keycode = input.KeyCode

            if keycode == Enum.KeyCode.X then 

                player.Character.Humanoid.WalkSpeed = sprintSpeed

            end

        end

    end

end



local function endSprint(input, gameProcessed)

    if not gameProcessed then

        if input.UserInputType == Enum.UserInputType.Keyboard then

            local keycode = input.KeyCode

            if keycode == Enum.KeyCode.X then

                player.Character.Humanoid.WalkSpeed = walkSpeed

            end

        end

    end

end



userInput.InputBegan:Connect(beginSprint)

userInput.InputEnded:Connect(endSprint)]]


IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

function hatset(yes,part,c1,c0,nm)
reanim[yes].Handle.AccessoryWeld.Part1=reanim[part]
reanim[yes].Handle.AccessoryWeld.C1=c1 or CFrame.new()
reanim[yes].Handle.AccessoryWeld.C0=c0 or CFrame.new()--3bbb322dad5929d0d4f25adcebf30aa5
if nm==true then
noplsmesh(yes)
end
end

-- sprint!
--[[local userInput = game:GetService("UserInputService")

local players = game:GetService("Players")



local sprintSpeed = 22

local walkSpeed = 11



local player = players.LocalPlayer



local function beginSprint(input, gameProcessed)

    if not gameProcessed then        

        if input.UserInputType == Enum.UserInputType.Keyboard then

            local keycode = input.KeyCode

            if keycode == Enum.KeyCode.X then 

                player.Character.Humanoid.WalkSpeed = sprintSpeed

            end

        end

    end

end



local function endSprint(input, gameProcessed)

    if not gameProcessed then

        if input.UserInputType == Enum.UserInputType.Keyboard then

            local keycode = input.KeyCode

            if keycode == Enum.KeyCode.X then

                player.Character.Humanoid.WalkSpeed = walkSpeed

            end

        end

    end

end



userInput.InputBegan:Connect(beginSprint)

userInput.InputEnded:Connect(endSprint)]]

--put the hat script converted below

reanim = game.Players.LocalPlayer.Character.CWExtra.NexoPD
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(-0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))


coroutine.wrap(function()
while true do -- anim changer
hatset('Hat1','Right Arm',CFrame.new(),reanim['Hat1'].Handle.AccessoryWeld.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),false)
if HumanDied then mousechanger:Disconnect() break end
sine = sine + speed
local rlegray = Ray.new(reanim["Right Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local rlegpart, rlegendPoint = workspace:FindPartOnRay(rlegray, char)
local llegray = Ray.new(reanim["Left Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local llegpart, llegendPoint = workspace:FindPartOnRay(llegray, char)
local rightvector = (Root.Velocity * Root.CFrame.rightVector).X + (Root.Velocity * Root.CFrame.rightVector).Z
local lookvector = (Root.Velocity * Root.CFrame.lookVector).X + (Root.Velocity * Root.CFrame.lookVector).Z
if lookvector > reanim.Humanoid.WalkSpeed then
lookvector = reanim.Humanoid.WalkSpeed
end
if lookvector < -reanim.Humanoid.WalkSpeed then
lookvector = -reanim.Humanoid.WalkSpeed
end
if rightvector > reanim.Humanoid.WalkSpeed then
rightvector = reanim.Humanoid.WalkSpeed
end
if rightvector < -reanim.Humanoid.WalkSpeed then
rightvector = -reanim.Humanoid.WalkSpeed
end
local lookvel = lookvector / reanim.Humanoid.WalkSpeed
local rightvel = rightvector / reanim.Humanoid.WalkSpeed

if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/6.5),1+0*math.cos(sine/6.5),0+0*math.cos(sine/6.5))*ANGLES(RAD(0+0*math.cos(sine/6.5)),RAD(0+0*math.sin(sine/6.5)),RAD(0+0*math.cos(sine/6.5))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/6.5),0+0*math.sin(sine/6.5),0+0*math.cos(sine/6.5))*ANGLES(RAD(17+0*math.cos(sine/6.5)),RAD(0+0*math.sin(sine/6.5)),RAD(0+0*math.cos(sine/6.5))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/6.5),0.5+0*math.cos(sine/6.5),0+0*math.cos(sine/6.5))*ANGLES(RAD(46+0*math.cos(sine/6.5)),RAD(-14+0*math.cos(sine/6.5)),RAD(24+0*math.cos(sine/6.5))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/6.5),0.5+0*math.cos(sine/6.5),0+0*math.cos(sine/6.5))*ANGLES(RAD(53+0*math.cos(sine/6.5)),RAD(20+0*math.cos(sine/6.5)),RAD(-27+0*math.cos(sine/6.5))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/6.5),-1+0*math.cos(sine/6.5),0+0*math.cos(sine/6.5))*ANGLES(RAD(-27+0*math.cos(sine/6.5)),RAD(-9+0*math.cos(sine/6.5)),RAD(6+0*math.cos(sine/6.5))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/6.5),-1+0*math.cos(sine/6.5),0+0*math.cos(sine/6.5))*ANGLES(RAD(-18+0*math.cos(sine/6.5)),RAD(22+0*math.cos(sine/6.5)),RAD(-5+0*math.cos(sine/6.5))),.3)
elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/6.5),1+0*math.cos(sine/6.5),0+0*math.cos(sine/6.5))*ANGLES(RAD(26+0*math.cos(sine/6.5)),RAD(0+0*math.sin(sine/6.5)),RAD(0+0*math.cos(sine/6.5))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/6.5),0+0*math.sin(sine/6.5),0+0*math.cos(sine/6.5))*ANGLES(RAD(89+0*math.cos(sine/6.5)),RAD(0+0*math.sin(sine/6.5)),RAD(0+0*math.cos(sine/6.5))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/6.5),0.5+0*math.cos(sine/6.5),0+0*math.cos(sine/6.5))*ANGLES(RAD(-74+0*math.cos(sine/6.5)),RAD(-14+0*math.cos(sine/6.5)),RAD(24+0*math.cos(sine/6.5))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/6.5),0.5+0*math.cos(sine/6.5),0+0*math.cos(sine/6.5))*ANGLES(RAD(-85+0*math.cos(sine/6.5)),RAD(20+0*math.cos(sine/6.5)),RAD(-27+0*math.cos(sine/6.5))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/6.5),-1+0*math.cos(sine/6.5),0+0*math.cos(sine/6.5))*ANGLES(RAD(-63+0*math.cos(sine/6.5)),RAD(-9+0*math.cos(sine/6.5)),RAD(6+0*math.cos(sine/6.5))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/6.5),-1+0*math.cos(sine/6.5),0+0*math.cos(sine/6.5))*ANGLES(RAD(-70+0*math.cos(sine/6.5)),RAD(22+0*math.cos(sine/6.5)),RAD(-5+0*math.cos(sine/6.5))),.3)
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),01+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-36+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+-0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-21+-5*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(21+0*math.cos(sine/13)),RAD(0+7*math.cos(sine/13)),RAD(0+-5*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(21+0*math.cos(sine/13)),RAD(0+-7*math.cos(sine/13)),RAD(0+5*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(21+5*math.cos(sine/13)),RAD(-9+0*math.cos(sine/13)),RAD(6+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(21+5*math.cos(sine/13)),RAD(22+0*math.cos(sine/13)),RAD(-5+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude < 20 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),01+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(-12+0*math.cos(sine/13)),RAD(0+-5*math.sin(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.1*math.sin(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+5*math.sin(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-32*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.3)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/13),0.5+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+31*math.cos(sine/13)),RAD(0+-7*math.cos(sine/13)),RAD(0+5*math.cos(sine/13))),.3)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+0.05*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+31*math.cos(sine/13)),RAD(-9+0*math.cos(sine/13)),RAD(4+0*math.cos(sine/13))),.3)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+-31*math.cos(sine/13)),RAD(22+0*math.cos(sine/13)),RAD(-5+0*math.cos(sine/13))),.3)
elseif Root.Velocity.Magnitude > 20 then -- run
--run clerp here
end
srv.RenderStepped:Wait()
end
end)()
--Created using Nexo Animator
reanim.Humanoid.HipHeight = -0.2
