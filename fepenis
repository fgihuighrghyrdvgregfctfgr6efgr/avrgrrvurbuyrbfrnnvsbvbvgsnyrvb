local Plr = game:GetService("Players").LocalPlayer -- you
local Player = game:GetService("Players").LocalPlayer-- you
local Character = Player.Character-- your character

local Hats = {
    ball1 = Character:WaitForChild("Racing Helmet USA"),
    ball2 = Character:WaitForChild("Stinger77"),
    penis = Character:WaitForChild("Backuette"),
    tip = Character:WaitForChild("InternationalFedora")
} -- the hat/body limb name

Hats.ball1.Handle.Mesh:Remove()
Hats.ball2.Handle.Mesh:Remove()
Hats.penis.Handle.SpecialMesh:Remove()
Hats.tip.Handle.SpecialMesh:Remove()
wait(1)

HumanDied = false
loadstring(game:HttpGet(('https://raw.githubusercontent.com/XeneonPlays/Nexo/main/NexoReanimate'),true))()

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

function hatset(yes,part,c1,c0,nm)
reanim[yes].Handle.AccessoryWeld.Part1=reanim[part]
reanim[yes].Handle.AccessoryWeld.C1=c1 or CFrame.new()
reanim[yes].Handle.AccessoryWeld.C0=c0 or CFrame.new()--3bbb322dad5929d0d4f25adcebf30aa5
if nm==true then
for i,v in next, workspace[game.Players.LocalPlayer.Name][yes].Handle:GetDescendants() do
if v:IsA('Mesh') or v:IsA('SpecialMesh') then
v:Remove()
end
end
end
end

function setuptrail(parent,Pos1,Pos2,Color,LT,LE,Texture)
IT = Instance.new
local Part1 = parent
local A1 = IT("Attachment",Part1)
A1.Position = Pos1
A1.Name = "ATH10"
local B1 = IT("Attachment",Part1)
B1.Position = Pos2
B1.Name = "ATH11"
local Trail1 = IT("Trail",Part1)
Trail1.Name = "Nexo Trail"
Trail1.Color = Color
Trail1.Attachment0 = B1
Trail1.Attachment1 = A1
Trail1.Lifetime = LT
Trail1.LightEmission = LE
Trail1.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 0),NumberSequenceKeypoint.new(1, 1)})
Trail1.Texture = Texture
Trail1.Enabled = true
end

--                          |
--put the setup trail below v

--put the hat script converted below

reanim = game.Players.LocalPlayer.Character
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(-0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0.5,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))

coroutine.wrap(function()
while true do -- anim changer
hatset('Racing Helmet USA','Torso',CFrame.new(),reanim['Racing Helmet USA'].Handle.AccessoryWeld.C0:Lerp(CF(-0.3+0*math.cos(sine/13),1.1+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Racing Helmet USA'].Handle.AccessoryWeld.C0 = reanim['Racing Helmet USA'].Handle.AccessoryWeld.C0:Lerp(CF(-0.3+0*math.cos(sine/13),1.1+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
hatset('Stinger77','Torso',CFrame.new(),reanim['Stinger77'].Handle.AccessoryWeld.C0:Lerp(CF(0.3+0*math.cos(sine/13),1.1+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Stinger77'].Handle.AccessoryWeld.C0 = reanim['Stinger77'].Handle.AccessoryWeld.C0:Lerp(CF(0.3+0*math.cos(sine/13),1.1+0*math.cos(sine/13),0.5+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
hatset('Backuette','Torso',CFrame.new(),reanim['Backuette'].Handle.AccessoryWeld.C0:Lerp(CF(3.2+0*math.cos(sine/13),0.7+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['Backuette'].Handle.AccessoryWeld.C0 = reanim['Backuette'].Handle.AccessoryWeld.C0:Lerp(CF(3.2+0*math.cos(sine/13),0.7+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
hatset('InternationalFedora','Torso',CFrame.new(),reanim['InternationalFedora'].Handle.AccessoryWeld.C0:Lerp(CF(6+0*math.cos(sine/13),0.7+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),1),true)
reanim['InternationalFedora'].Handle.AccessoryWeld.C0 = reanim['InternationalFedora'].Handle.AccessoryWeld.C0:Lerp(CF(6+0*math.cos(sine/13),0.7+0*math.cos(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.cos(sine/13)),RAD(90+0*math.cos(sine/13)),RAD(0+0*math.cos(sine/13))),.1)
if HumanDied then break end
sine = sine + speed
if Root.Velocity.y > 1 then -- jump
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.sin(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.sin(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/4.5),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.sin(sine/4.5)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/4.5),0.5+-0.02*math.sin(sine/4.5),0+0*math.cos(sine/4.5))*ANGLES(RAD(-1+-1*math.sin(sine/4.5)),RAD(8+0*math.cos(sine/4.5)),RAD(31+0*math.sin(sine/4.5))),.1)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/4.5),0.5+-0.02*math.sin(sine/4.5),0+0*math.cos(sine/4.5))*ANGLES(RAD(-1+-1*math.sin(sine/4.5)),RAD(-8+0*math.cos(sine/4.5)),RAD(-34+0*math.sin(sine/4.5))),.1)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4.5),-1+-0.02*math.cos(sine/4.5),0+0*math.cos(sine/4.5))*ANGLES(RAD(-1+0*math.sin(sine/4.5)),RAD(-14+0*math.cos(sine/4.5)),RAD(5+0*math.sin(sine/4.5))),.1)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4.5),-1+-0.02*math.cos(sine/4.5),0+0*math.cos(sine/4.5))*ANGLES(RAD(0+0*math.sin(sine/4.5)),RAD(11+0*math.cos(sine/4.5)),RAD(-2+0*math.sin(sine/4.5))),.1)
elseif Root.Velocity.y < -1 then -- fall
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.sin(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.sin(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0*math.cos(sine/4.5),0+0*math.cos(sine/13))*ANGLES(RAD(-38+0*math.sin(sine/4.5)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/4.5),0.5+-0.02*math.sin(sine/4.5),0+0*math.cos(sine/4.5))*ANGLES(RAD(142+-1*math.sin(sine/4.5)),RAD(8+0*math.cos(sine/4.5)),RAD(31+0*math.sin(sine/4.5))),.1)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/4.5),0.5+-0.02*math.sin(sine/4.5),0+0*math.cos(sine/4.5))*ANGLES(RAD(148+-1*math.sin(sine/4.5)),RAD(-8+0*math.cos(sine/4.5)),RAD(-34+0*math.sin(sine/4.5))),.1)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4.5),-1+-0.02*math.cos(sine/4.5),0+0*math.cos(sine/4.5))*ANGLES(RAD(-25+0*math.sin(sine/4.5)),RAD(-14+0*math.cos(sine/4.5)),RAD(5+0*math.sin(sine/4.5))),.1)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4.5),-1+-0.02*math.cos(sine/4.5),0+0*math.cos(sine/4.5))*ANGLES(RAD(-28+0*math.sin(sine/4.5)),RAD(11+0*math.cos(sine/4.5)),RAD(-2+0*math.sin(sine/4.5))),.1)
elseif Root.Velocity.Magnitude < 2 then -- idle
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.sin(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.sin(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.02*math.cos(sine/6.5),0+0*math.cos(sine/13))*ANGLES(RAD(-1+1*math.sin(sine/6.5)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/6.5),0.5+-0.02*math.sin(sine/6.5),0+0*math.cos(sine/13))*ANGLES(RAD(-1+-1*math.sin(sine/6.5)),RAD(-6+0*math.cos(sine/13)),RAD(6+3*math.sin(sine/6.5))),.1)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/6.5),0.5+-0.02*math.sin(sine/6.5),0+0*math.cos(sine/6.5))*ANGLES(RAD(-1+-1*math.sin(sine/6.5)),RAD(6+0*math.cos(sine/6.5)),RAD(-6+-3*math.sin(sine/6.5))),.1)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+-0.02*math.cos(sine/6.5),0+0*math.cos(sine/13))*ANGLES(RAD(-1+-1*math.sin(sine/6.5)),RAD(-14+0*math.cos(sine/13)),RAD(5+0*math.sin(sine/13))),.1)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-0.02*math.cos(sine/6.5),0+0*math.cos(sine/13))*ANGLES(RAD(-1+-1*math.sin(sine/6.5)),RAD(11+0*math.cos(sine/13)),RAD(-2+0*math.sin(sine/13))),.1)
elseif Root.Velocity.Magnitude < 11 then -- walk
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.sin(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.sin(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.02*math.cos(sine/6.5),0+0*math.cos(sine/13))*ANGLES(RAD(-1+1*math.sin(sine/6.5)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/6.5),0.5+-0.02*math.sin(sine/6.5),0+0*math.cos(sine/13))*ANGLES(RAD(-1+11*math.sin(sine/6.5)),RAD(-6+0*math.cos(sine/13)),RAD(6+3*math.sin(sine/6.5))),.1)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/6.5),0.5+-0.02*math.sin(sine/6.5),0+0*math.cos(sine/6.5))*ANGLES(RAD(-1+-11*math.sin(sine/6.5)),RAD(6+0*math.cos(sine/6.5)),RAD(-6+-3*math.sin(sine/6.5))),.1)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/13),-1+-0.02*math.cos(sine/6.5),0+0*math.cos(sine/13))*ANGLES(RAD(-1+-16*math.sin(sine/6.5)),RAD(-14+0*math.cos(sine/13)),RAD(5+0*math.sin(sine/13))),.1)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/13),-1+-0.02*math.cos(sine/6.5),0+0*math.cos(sine/13))*ANGLES(RAD(-1+16*math.sin(sine/6.5)),RAD(11+0*math.cos(sine/13)),RAD(-2+0*math.sin(sine/13))),.1)
elseif Root.Velocity.Magnitude > 11 then -- run
NECK.C0 = NECK.C0:Lerp(CF(0+0*math.cos(sine/13),1+0*math.sin(sine/13),0+0*math.cos(sine/13))*ANGLES(RAD(0+0*math.sin(sine/13)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
RJ.C0 = RJ.C0:Lerp(CF(0+0*math.cos(sine/13),0+0.02*math.cos(sine/4.5),0+0*math.cos(sine/13))*ANGLES(RAD(-14+1*math.sin(sine/4.5)),RAD(0+0*math.cos(sine/13)),RAD(0+0*math.sin(sine/13))),.1)
RS.C0 = RS.C0:Lerp(CF(1+0*math.cos(sine/4.5),0.5+-0.02*math.sin(sine/4.5),0+0*math.cos(sine/4.5))*ANGLES(RAD(-1+22*math.sin(sine/4.5)),RAD(8+0*math.cos(sine/4.5)),RAD(6+0*math.sin(sine/4.5))),.1)
LS.C0 = LS.C0:Lerp(CF(-1+0*math.cos(sine/4.5),0.5+-0.02*math.sin(sine/4.5),0+0*math.cos(sine/4.5))*ANGLES(RAD(-1+-22*math.sin(sine/4.5)),RAD(-8+0*math.cos(sine/4.5)),RAD(-6+0*math.sin(sine/4.5))),.1)
RH.C0 = RH.C0:Lerp(CF(0.5+0*math.cos(sine/4.5),-1+-0.02*math.cos(sine/4.5),0+0*math.cos(sine/4.5))*ANGLES(RAD(-1+-25*math.sin(sine/4.5)),RAD(-14+0*math.cos(sine/4.5)),RAD(5+0*math.sin(sine/4.5))),.1)
LH.C0 = LH.C0:Lerp(CF(-0.5+0*math.cos(sine/4.5),-1+-0.02*math.cos(sine/4.5),0+0*math.cos(sine/4.5))*ANGLES(RAD(0+25*math.sin(sine/4.5)),RAD(11+0*math.cos(sine/4.5)),RAD(-2+0*math.sin(sine/4.5))),.1)
end
srv.RenderStepped:Wait()
end
end)()
--Created using Nexo Animator
game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 8
